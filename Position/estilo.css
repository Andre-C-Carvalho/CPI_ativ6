*{
	margin: 0;
	padding: 0;
}

body{}

section{}

/*O comando FLOAT faz com que os elementos que o utilizam saiam do fluxo do html, tem duas opções: float LEFT ou RIGHT. 
O comando funciona fazendo com que o elemento "flutue" e se alinhe a esquerda ou a direita*/

/*Comando POSITION: 
STATIC: não provoca nenhuma mudança, os elementos são deixados onde foram criados.
RELATIVE: posiciona o elemnto em relaçao ao elemento em que ele se encontra, tem as propriedade LEFT, RIGHT, TOP, BOTTON.
ABSOLUTE: posiciona o elementoem relação ao body, tem as propriedade LEFT, RIGHT, TOP, BOTTON.
FIXED: fixa um elemento na tela com base as coordenadas de entrada definidas pelo programador.
STICKY: o elemento fica fixo, mas apenas a partir de um determinado momento.
*/

header{
	width: 100%;
	height: 200px;
	background-color: #7C7C7C;
}

#nav-topo{
	width: 100%;
	height: 50px;
	background-color: brown;
	z-index: 1; /*Faz com que esse elemento fique posicionado sempre acima dos demais.*/
	position: sticky;
	top: 0px; /*Acomanha o posicionamento da pagina até que o navi topo esteja no topo da tela, apartir daí fica fixo.*/
}

ul{
	background-color: white;
	position: relative; /* posição será relativa ao elemento em que se encontra, nesse caso o #nav-topo. */
	top: 15px;/*Se afasta 15px do topo do #nav-topo*/
}

#menu-nav-topo{
	display: flex;
}

li{
	margin: 0 0 0 20px;
}

nav{
	width: 30%;
	background-color: #CCC;
	height: 850px;
	float: left;
}

main{
	width: 50%;
	background-color: blue;
	height: 850px;
	float: left;
}

#box-main{
	width: 90%; /*Esses 90% se referem ao tamanho da seção que a caixa está inserida, nesse caso a main.*/
	height: 150px;
	background-color: coral;
	position: relative; /* posição será relativa ao elemento em que se encontra, nesse caso o main. */
	top: 30px; /*Se afasta 30px do topo do main*/
	left: 30px; /*Se afasta 30 px para a esqueda do main*/
}


aside{
	width: 20%;
	background-color: green;
	height: 850px;
	float: left;
}

/*O comando FLOAT faz com que os elementos que o utilizam saiam do fluxo do html, mas provoca que os elementos posteriores a 
ele, como nesse caso o footer, fiquem em uma camada abaixo dos elementos que "flutuam". Para resolver esse problema usamos o 
comando CLEAR. Ele faz com que os elementos posteriores voltem ao fluxo normal do html, mas apenas depois dos que 
flutuam. Tem as opções clear: LEFT, RIGHT ou BOTH. Ignora a flutuação para a esquerda, para a direita ou ambas.*/

footer{
	width: 100%;
	background-color: black;
	height: 94px;
	clear: both;
}

#botao-topo{
	width: 70px;
	height: 70px;
	background-color: beige;
	border-radius: 35px; /* Faz o quadrado de 75px se transformar em um círculo*/
	position: fixed; /*O elemento fica fixo na tela nas coordenadas definidas pelo programador*/
	bottom: 30px; /*Se afasta 30px do fundo da tela*/
	right: 30px; /*Se afasta 30px da direita da tela*/
}